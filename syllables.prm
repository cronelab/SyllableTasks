Application:Application%20Window:ApplicationWindow string WindowBackgroundColor= 0x000000 0x505050 % % // Application window background color (color)
Visualize:Application%20Window:ApplicationWindow int VisualizeApplicationWindow= 0 0 0 1 // Display miniature copy of Application window (boolean)
Visualize:Application%20Window:ApplicationWindow int AppWindowSpatialDecimation= 8 8 1 % // Application window decimation (shrinking) factor
Visualize:Application%20Window:ApplicationWindow int AppWindowTemporalDecimation= 4 16 1 % // Application window time decimation factor
Visualize:Application%20Log:ApplicationBase int ShowAppLog= 1 0 0 1 // Show application log window (boolean)
Application:Sequencing:StimulusTask float PreRunDuration= 5s 1 0 % // pause preceding first sequence
Application:Sequencing:StimulusTask float PostRunDuration= 5s 0 0 % // pause following last sequence
Application:Sequencing:StimulusTask float PreSequenceDuration= 5s 2s 0 % // pause preceding sequences/sets of intensifications
Application:Sequencing:StimulusTask float PostSequenceDuration= 5s 2s 0 % // pause following sequences/sets of intensifications
Application:Sequencing:StimulusTask float StimulusDuration= 1s 40ms 0 % // stimulus duration
Application:Sequencing:StimulusTask string EarlyOffsetExpression= % // abort stimulus if this expression becomes true
Application:Sequencing:StimulusTask float ISIMinDuration= 3.5s 80ms 0 % // minimum duration of inter-stimulus interval
Application:Sequencing:StimulusTask float ISIMaxDuration= 4.5s 80ms 0 % // maximum duration of inter-stimulus interval
Application:Result%20Processing:StimulusTask int InterpretMode= 2 0 0 2 // interpretation of results: 0 none, 1 online free mode, 2 copy mode (enumeration)
Application:Result%20Processing:StimulusTask int DisplayResults= 0 1 0 1 // display results of copy/free spelling (boolean)
Application:Result%20Processing:StimulusTask int AccumulateEvidence= 0 0 0 1 // accumulate evidence until a selection is made (boolean)
Application:Result%20Processing:StimulusTask float MinimumEvidence= 0 0 0 % // do not make a selection unless target evidence exceeds this value. For a normalized classifier, MinimumEvidence approximates -2.3*log10(Error Probability)
Application:Sequencing:StimulusPresentationTask intlist Sequence= 12 1 1 1 1 1 1 1 1 1 1 1 1 // Sequence in which stimuli are presented (deterministic mode)/ Stimulus frequencies for each stimulus (random mode)/ Ignored (P3Speller compatible mode)
Application:Sequencing:StimulusPresentationTask int SequenceType= 2 0 0 2 // Sequence of stimuli is 0 deterministic, 1 random, 2 P3Speller compatible (enumeration)
Application:Sequencing:StimulusPresentationTask int NumberOfSequences= 1 1 0 % // number of sequence repetitions
Application:Sequencing:StimulusPresentationTask intlist ToBeCopied= 10 1 1 1 1 1 1 1 1 1 1 1 1 % // Sequence in which stimuli need to be copied (only used in copy mode)
Application:Sequencing:StimulusPresentationTask string UserComment= % // User comments for a specific run
Application:Stimuli:StimulusPresentationTask matrix Stimuli= { caption icon audio } 12 BAH PAH KAH GAH TAH DAH BEE PEE KEE GEE TEE DEE % % % % % % % % % % % % ../web/paradigms/SyllableTasks/audio/Bah.wav ../web/paradigms/SyllableTasks/audio/Pah.wav ../web/paradigms/SyllableTasks/audio/Kah.wav ../web/paradigms/SyllableTasks/audio/Gah.wav ../web/paradigms/SyllableTasks/audio/Tah.wav ../web/paradigms/SyllableTasks/audio/Dah.wav ../web/paradigms/SyllableTasks/audio/Bee.wav ../web/paradigms/SyllableTasks/audio/Pee.wav ../web/paradigms/SyllableTasks/audio/Kee.wav ../web/paradigms/SyllableTasks/audio/Gee.wav ../web/paradigms/SyllableTasks/audio/Tee.wav ../web/paradigms/SyllableTasks/audio/Dee.wav  // captions and icons to be displayed, sounds to be played for different stimuli
Application:Stimuli:StimulusPresentationTask matrix FocusOn= { caption icon audio } { focuson } % % % // initial announcement what to focus on
Application:Stimuli:StimulusPresentationTask matrix Result= { caption icon audio } { result } % % % // final result announcement 
Application:Stimuli:StimulusPresentationTask matrix ISIStimulus= { caption icon audio } { ISIStimulus } + % % // interstimulus interval stimulus
Application:Stimuli:StimulusPresentationTask int StimulusWidth= 100 0 0 100 // StimulusWidth in percent of screen width (zero for original pixel size)
Application:Stimuli:StimulusPresentationTask int CaptionHeight= 10 0 0 100 // Height of stimulus caption text in percent of screen height
Application:Stimuli:StimulusPresentationTask string CaptionColor= 0xFFFFFF 0x00FFFFFF 0x00000000 0xFFFFFFFF // Color of stimulus caption text (color)
Application:Stimuli:StimulusPresentationTask string BackgroundColor= 0x00000000 0x00FFFF00 0x00000000 0xFFFFFFFF // Color of stimulus background (color)
Application:Stimuli:StimulusPresentationTask int CaptionSwitch= 1 1 0 1 // Present captions (boolean)
Application:Stimuli:StimulusPresentationTask int IconSwitch= 1 1 0 1 // Present icon files (boolean)
Application:Stimuli:StimulusPresentationTask int AudioSwitch= 0 1 0 1 // Present audio files (boolean)
Application:Stimuli:StimulusPresentationTask int TimingSwitch= 1 0 0 1 // Display timing marker (boolean)
Application:Stimuli:StimulusPresentationTask float AudioVolume= 100 100 0 100 // Volume for audio playback in percent
Application:Human%20Interface%20Devices:KeystrokeFilter string KeystrokeStateName= % // State to be translated into keystrokes (0-F), empty for off
Application:Human%20Interface%20Devices:KeystrokeFilter string KeystrokeExpression= % // Expression that evaluates to a virtual keycode, empty for off
Application:Human%20Interface%20Devices:KeystrokeFilter string KeystrokeExpressionOnStartRun= % // Expression that initializes expression variables on StartRun
